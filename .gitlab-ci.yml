stages:
  - build
  - docker
  - deploy

variables:
  MAVEN_CLI_OPTS: "-B -Dmaven.test.skip=true"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  IMAGE_TAG: ${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
  IMAGE_NAME: harbor.local/vcorestack/$CI_PROJECT_NAME
  DEPLOY_ENV: dev # default deploy environment

cache:
  key: maven-cache
  paths:
    - .m2/repository

# 1️⃣ Build Spring Boot jar
build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    paths:
      - target/*.jar

# 2️⃣ Docker build & push (optimized for speed)
docker-build-push:
  stage: docker
  image: docker:24
  services:
    - docker:dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: 1
  before_script:
    - echo $HARBOR_PASS | docker login  harbor.local -u $HARBOR_USER --password-stdin
  script:
    # Build with cache layer
    - docker pull $IMAGE_NAME:cache || true
    - docker build \
        --cache-from=$IMAGE_NAME:cache \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        -t $IMAGE_NAME:$IMAGE_TAG \
        -t $IMAGE_NAME:cache \
        .
    # Push image
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker push $IMAGE_NAME:cache
    # (Optional) Push latest tag for dev/staging
    - if [[ "$CI_COMMIT_BRANCH" == "develop" ]]; then docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest && docker push $IMAGE_NAME:latest; fi
    # Export IMAGE_TAG for deploy stage
    - echo "IMAGE_TAG=$IMAGE_TAG" > image_tag.env
  artifacts:
    reports:
      dotenv: image_tag.env
    paths:
      - image_tag.env

# 3️⃣ Deploy trực tiếp bằng update-values.sh
deploy:
  stage: deploy
  image: alpine:3.20
  dependencies:
    - docker-build-push
  before_script:
    - apk add --no-cache bash git curl
    - chmod +x scripts/update-values.sh
  script:
    - source image_tag.env
    - ./update-values.sh bpm-gateway "$IMAGE_TAG" "$DEPLOY_ENV"
  only:
    - main
    - develop
    - /^release-.*$/
