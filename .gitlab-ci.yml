stages:
  - build
  - docker
  - update-manifest

variables:
  MAVEN_CLI_OPTS: "-B -Dmaven.test.skip=true"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"
  IMAGE_TAG: ${CI_COMMIT_TAG:-$CI_COMMIT_SHORT_SHA}
  IMAGE_NAME: harbor.local/bpm/$CI_PROJECT_NAME

cache:
  key: maven-cache
  paths:
    - .m2/repository

# 1️⃣ Build Spring Boot jar
build:
  stage: build
  image: maven:3.9.6-eclipse-temurin-17
  tags:
    - build
  script:
    - mvn $MAVEN_CLI_OPTS clean package
  artifacts:
    paths:
      - target/*.jar


docker-build:
  stage: docker
  image: docker:24
  services:
    - docker:dind
  tags:
    - docker
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
    DOCKER_BUILDKIT: 1
  before_script:
    - echo $HARBOR_PASS | docker login harbor.local -u $HARBOR_USER --password-stdin
  script:
    - docker pull $IMAGE_NAME:cache || true
    - docker build \
        --cache-from=$IMAGE_NAME:cache \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        -t $IMAGE_NAME:$IMAGE_TAG \
        -t $IMAGE_NAME:cache \
        .
    - docker push $IMAGE_NAME:$IMAGE_TAG
    - docker push $IMAGE_NAME:cache
    - if [[ "$CI_COMMIT_BRANCH" == "develop" ]]; then
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest &&
        docker push $IMAGE_NAME:latest;
      fi
    - echo "IMAGE_TAG=$IMAGE_TAG" > image_tag.env
  artifacts:
    reports:
      dotenv: image_tag.env
    paths:
      - image_tag.env

update-manifest:
  stage: update-manifest
  image: alpine:3.20
  tags:
    - build
  dependencies:
    - docker-build
  before_script:
    - apk add --no-cache git yq
    - git config --global user.name "CI Bot"
    - git config --global user.email "ci-bot@gitlab.local"
    - |
      if [[ "$CI_COMMIT_BRANCH" == "main" ]]; then
        DEPLOY_ENV=prod
      elif [[ "$CI_COMMIT_BRANCH" == "dev" ]]; then
        DEPLOY_ENV=dev
      elif [[ "$CI_COMMIT_BRANCH" =~ ^release-.*$ ]]; then
        DEPLOY_ENV=staging
      else
        echo "Branch $CI_COMMIT_BRANCH not mapped to any environment. Skipping deploy."
        exit 0
      fi
      echo "DEPLOY_ENV=$DEPLOY_ENV" > deploy_env.env
  script:
    - source deploy_env.env
    - git clone http://gitlab.local/cicd/deployment-manifests.git
    - cd deployment-manifests
    - yq e -i ".image.tag = \"$IMAGE_TAG\"" charts/bpm-connector/values-${DEPLOY_ENV}.yaml
    - git add charts/bpm-connector/values-${DEPLOY_ENV}.yaml
    - git commit -m "Update bpm-connector image tag to $IMAGE_TAG for ${DEPLOY_ENV}"
    - git push http://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.local/cicd/deployment-manifests.git HEAD:main
  only:
    - main
    - develop
    - /^release-.*$/
